package @{content.packageName};

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import @{content.baseContent.namespacePrefix}.mapper.@{content.bizEnBigName}Mapper;
import @{content.baseContent.namespacePrefix}.model.@{content.bizEnBigName};
import @{content.baseContent.namespacePrefix}.dto.@{content.bizEnBigName}DTO;
import @{content.baseContent.namespacePrefix}.service.I@{content.bizEnBigName}Service;
import org.springframework.stereotype.Service;

import java.util.List;

<% for(import in content.imports!){ %>
import @{import};
<% } %>

<% var date = date(); %>
/**
 * @{content.bizChName}服务实现类
 *
 * @author @{content.author}
 * @Date @{date,dateFormat="yyyy-MM-dd HH:mm:ss"}
 */
 @Service
public class @{content.bizEnBigName}ServiceImpl extends ServiceImpl<@{content.bizEnBigName}Mapper, @{content.bizEnBigName}> implements I@{content.bizEnBigName}Service {



    /**
     * 新增@{content.bizChName}
     *
     * @param @{content.bizEnName}
     */
    @Override
    public void insert(@{content.bizEnBigName}DTO @{content.bizEnName}) {

        insertCheck(@{content.bizEnName});
        @{content.bizEnBigName} insertItem = new @{content.bizEnBigName}();
        insertItem.insert();
    }

    /**
     * 删除@{content.bizChName}
     *
     * @param id
     */
    @Override
    public void delete(Integer id) {

        @{content.bizEnBigName} updateItem = new @{content.bizEnBigName}();
        updateItem.setId(id);
        updateItem.setDelete(true);
        updateItem.updateById();
    }

    /**
     * 修改@{content.bizChName}
     *
     * @param @{content.bizEnName}
     */
    @Override
    public void update(@{content.bizEnBigName}DTO @{content.bizEnName}) {

        updateCheck(@{content.bizEnName});

        @{content.bizEnBigName} updateItem = new @{content.bizEnBigName}();
        updateItem.setId(@{content.bizEnName}.getId());
        updateItem.updateById();
    }

    /**
     * 查询@{content.bizChName}
     *
     * @param dto
     */
    @Override
    public List<@{content.bizEnBigName}> list(@{content.bizEnBigName}DTO dto) {

        return baseMapper.list(dto);
    }

    /**
     * 新增之前验证
     *
     * @param @{content.bizEnName}
     */
    private void insertCheck(@{content.bizEnBigName}DTO @{content.bizEnName}) {

        commonCheck(@{content.bizEnName});

        @{content.bizEnBigName} insertItem = new @{content.bizEnBigName}();
        insertItem.insert();
    }

    /**
     * 修改之前验证
     *
     * @param @{content.bizEnName}
     */
    private void updateCheck(@{content.bizEnBigName}DTO @{content.bizEnName}) {

        commonCheck(@{content.bizEnName});
    }

    /**
     * 新增、修改之前的通用验证
     *
     * @param @{content.bizEnName}
     */
    private void commonCheck(@{content.bizEnBigName}DTO @{content.bizEnName}) {
        // TODO 做一些必要的验证
    }
}
