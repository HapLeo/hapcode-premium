package @{content.packageName};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import @{content.baseContent.namespacePrefix}.dto.@{content.bizEnBigName}InsertDTO;
import @{content.baseContent.namespacePrefix}.dto.@{content.bizEnBigName}UpdateDTO;
import @{content.baseContent.namespacePrefix}.dto.@{content.bizEnBigName}ListDTO;
import @{content.baseContent.namespacePrefix}.vo.@{content.bizEnBigName}VO;
import @{content.baseContent.namespacePrefix}.model.@{content.bizEnBigName};
import @{content.baseContent.namespacePrefix}.service.I@{content.bizEnBigName}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;

<% for(import in content.imports!){ %>
import @{import};
<% } %>

<% var date = date(); %>
/**
 * @{content.bizChName}控制器
 *
 * @author @{content.author}
 * @Date @{date,dateFormat="yyyy-MM-dd HH:mm:ss"}
 */
@RestController
@RequestMapping("/@{content.bizEnName}")
public class @{content.bizEnBigName}Controller {


    @Autowired
    private I@{content.bizEnBigName}Service @{content.bizEnName}Service;


    /**
     * 新增@{content.bizChName}
     */
    @RequestMapping(value = "/insert", method = RequestMethod.POST)
    public Result insert(@RequestBody @Valid @{content.bizEnBigName}InsertDTO dto) {
        @{content.bizEnName}Service.insert(dto);
        return Result.successWithMessage("操作成功！");
    }

    /**
     * 删除@{content.bizChName}
     */
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public Result delete(@RequestParam Integer id) {
        @{content.bizEnName}Service.delete(id);
        return Result.successWithMessage("操作成功！");
    }

    /**
     * 修改@{content.bizChName}
     */
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public Result update(@RequestBody @Valid @{content.bizEnBigName}UpdateDTO dto) {
        @{content.bizEnName}Service.update(dto);
        return Result.successWithMessage("操作成功！");
    }

    /**
     * 获取@{content.bizChName}列表
     */
    @RequestMapping(value = "/listPage", method = RequestMethod.POST)
    public Result listPage(@RequestBody @Valid @{content.bizEnBigName}ListDTO dto) {

        Page<@{content.bizEnBigName}VO> page = new Page<>(dto.getCurrPage(), dto.getPageSize());
        page.setRecords(@{content.bizEnName}Service.listPage(dto, page));
        return Result.successWithData(page);
    }

    /**
     * 查看@{content.bizChName}明细
     */
    @RequestMapping(value = "/detail", method = RequestMethod.GET)
    public Result detail(Integer id) {

        return Result.successWithData(@{content.bizEnName}Service.getById(id));
    }

}
